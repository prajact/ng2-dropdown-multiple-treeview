[{"__symbolic":"module","version":3,"metadata":{"TreeItem":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"any"}]}],"updateCollapsedRecursive":[{"__symbolic":"method"}],"updateCheckedRecursive":[{"__symbolic":"method"}],"getCheckedItems":[{"__symbolic":"method"}]}},"TreeviewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"leo-treeview","template":"\n<div class=\"treeview-item\" [class.treeview-parent]=\"item.children\">\n    <i *ngIf=\"item.children\" (click)=\"toggleCollapseExpand()\" aria-hidden=\"true\"\n    class=\"fa\" [class.fa-caret-right]=\"item.collapsed\" [class.fa-caret-down]=\"!item.collapsed\"></i>\n    <label class=\"form-check-label\">\n        <input type=\"checkbox\" class=\"form-check-input\"\n        [(ngModel)]=\"item.checked\" (ngModelChange)=\"onCheckedChange($event)\" [disabled]=\"item.disabled\" />\n        {{item.text}}\n    </label>\n    <div [hidden]=\"item.collapsed\" *ngFor=\"let child of item.children\">\n        <leo-treeview [item]=\"child\" (checkedChange)=\"onChildCheckedChange($event)\"></leo-treeview>\n    </div>\n</div>\n    ","styles":["\n.treeview-item {\n    padding-left: 20px;\n    white-space: nowrap;\n}\n\n.treeview-item .form-check-label {\n    padding-top: 2px;\n    padding-bottom: 2px;\n}\n\n.treeview-item .fa {\n    margin-left: -1.0rem;\n    width: 10px;\n    cursor: pointer;\n}\n    "]}]}],"members":{"item":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"checkedChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"toggleCollapseExpand":[{"__symbolic":"method"}],"onCheckedChange":[{"__symbolic":"method"}],"onChildCheckedChange":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"TreeItem":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"any"}]}],"updateCollapsedRecursive":[{"__symbolic":"method"}],"updateCheckedRecursive":[{"__symbolic":"method"}],"getCheckedItems":[{"__symbolic":"method"}]}},"TreeviewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"leo-treeview","template":"\n<div class=\"treeview-item\" [class.treeview-parent]=\"item.children\">\n    <i *ngIf=\"item.children\" (click)=\"toggleCollapseExpand()\" aria-hidden=\"true\"\n    class=\"fa\" [class.fa-caret-right]=\"item.collapsed\" [class.fa-caret-down]=\"!item.collapsed\"></i>\n    <label class=\"form-check-label\">\n        <input type=\"checkbox\" class=\"form-check-input\"\n        [(ngModel)]=\"item.checked\" (ngModelChange)=\"onCheckedChange($event)\" [disabled]=\"item.disabled\" />\n        {{item.text}}\n    </label>\n    <div [hidden]=\"item.collapsed\" *ngFor=\"let child of item.children\">\n        <leo-treeview [item]=\"child\" (checkedChange)=\"onChildCheckedChange($event)\"></leo-treeview>\n    </div>\n</div>\n    ","styles":["\n.treeview-item {\n    padding-left: 20px;\n    white-space: nowrap;\n}\n\n.treeview-item .form-check-label {\n    padding-top: 2px;\n    padding-bottom: 2px;\n}\n\n.treeview-item .fa {\n    margin-left: -1.0rem;\n    width: 10px;\n    cursor: pointer;\n}\n    "]}]}],"members":{"item":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"checkedChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"toggleCollapseExpand":[{"__symbolic":"method"}],"onCheckedChange":[{"__symbolic":"method"}],"onChildCheckedChange":[{"__symbolic":"method"}]}}}}]